<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-6.0.xsd">
	
	<context:component-scan base-package="com.struts2" />
	<context:property-placeholder location="classpath:database.properties"/>
	<tx:annotation-driven transaction-manager="hibernateTransactionManager"/>
	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
	 	<property name="driverClassName" value="${database.driver}"></property>
	 	<property name="url" value="${database.url}"></property>
	 	<property name="username" value="${database.user}"></property>
	 	<property name="password" value="${database.password}"></property>
	</bean>
	<bean class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" id="sessionFactory">
		 <property name="dataSource" ref="dataSource"></property>
		 <property name="annotatedClasses">
	  		<list>
	   			<value>com.struts2.model.User</value>
	 		 </list>
	 	</property>
	 	<property name="hibernateProperties">
			 <props>
	  			<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				  <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				  <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}  </prop>    
	        </props>
	      </property>
	</bean>
	<bean class="com.struts2.dao.UserDaoImpl" id="userDao">
		<constructor-arg name="sessionFactory" ref="sessionFactory"></constructor-arg>
	</bean>
	 <bean class="org.springframework.orm.hibernate3.HibernateTransactionManager" id="hibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	 </bean>
	 <bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="passwordEncoder"></bean>
	 <bean class="com.struts2.service.UserServiceImpl" id="userDetailsService">
		 <constructor-arg name="userDao" ref="userDao"></constructor-arg>
	 </bean>
	<bean id="paytmAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="passwordEncoder" ref="passwordEncoder"></property>
		<property name="userDetailsService" ref="userDetailsService"></property>
	</bean>
	<bean id="listUserAction" class="com.struts2.action.ListUserAction">
		<constructor-arg name="userService" ref="userDetailsService"></constructor-arg>
	</bean>
	<bean id="loginAction" class="com.struts2.action.LoginAction">
		<constructor-arg name="authenticationProvider" ref="paytmAuthenticationProvider"></constructor-arg>
	</bean>
	<bean id="registerUserAction" class="com.struts2.action.RegisterUserAction">
		<constructor-arg name="userService" ref="userDetailsService"></constructor-arg>
		<constructor-arg name="passwordEncoder" ref="passwordEncoder"></constructor-arg>
	</bean>

	<security:http>
		<security:intercept-url  pattern="/admin/**" access="hasRole('ADMIN')" />
		<security:intercept-url  pattern="/user/**" access="hasAnyRole('USER', 'ADMIN')" />
		<security:form-login
				login-page="login"
				login-processing-url="/login"
				username-parameter="userName"
				password-parameter="password"
				default-target-url="mainTemplate"/>
		<security:logout
				logout-url="/logout"
				logout-success-url="login"/>
		<security:access-denied-handler error-page="error"/>
	</security:http>
	<security:authentication-manager>
		<security:authentication-provider ref="paytmAuthenticationProvider" />
	</security:authentication-manager>
</beans>